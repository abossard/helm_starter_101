---
# Source: licmanager/charts/contract/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: myrelease-contract
  labels:
    helm.sh/chart: contract-0.1.0
    app.kubernetes.io/name: contract
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: licmanager/charts/core/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: myrelease-core
  labels:
    helm.sh/chart: core-0.1.0
    app.kubernetes.io/name: core
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: licmanager/charts/mail/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: myrelease-mail
  labels:
    helm.sh/chart: mail-0.1.0
    app.kubernetes.io/name: mail
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: licmanager/charts/bootstrap/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: myrelease-bootstrap
  labels:
    helm.sh/chart: bootstrap-0.1.0
    app.kubernetes.io/name: bootstrap
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  username: root
---
# Source: licmanager/charts/contract/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: myrelease-contract
  labels:
    helm.sh/chart: contract-0.1.0
    app.kubernetes.io/name: contract
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: contract
    app.kubernetes.io/instance: myrelease
---
# Source: licmanager/charts/core/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: myrelease-core
  labels:
    helm.sh/chart: core-0.1.0
    app.kubernetes.io/name: core
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: core
    app.kubernetes.io/instance: myrelease
---
# Source: licmanager/charts/mail/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: myrelease-mail
  labels:
    helm.sh/chart: mail-0.1.0
    app.kubernetes.io/name: mail
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mail
    app.kubernetes.io/instance: myrelease
---
# Source: licmanager/charts/contract/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myrelease-contract
  labels:
    helm.sh/chart: contract-0.1.0
    app.kubernetes.io/name: contract
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: contract
      app.kubernetes.io/instance: myrelease
  template:
    metadata:
      labels:
        app.kubernetes.io/name: contract
        app.kubernetes.io/instance: myrelease
    spec:
      serviceAccountName: myrelease-contract
      securityContext:
        {}
      containers:
        - name: contract
          securityContext:
            {}
          image: "contract:prod"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: licmanager/charts/core/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myrelease-core
  labels:
    helm.sh/chart: core-0.1.0
    app.kubernetes.io/name: core
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: core
      app.kubernetes.io/instance: myrelease
  template:
    metadata:
      labels:
        app.kubernetes.io/name: core
        app.kubernetes.io/instance: myrelease
    spec:
      serviceAccountName: myrelease-core
      securityContext:
        {}
      containers:
        - name: core
          securityContext:
            {}
          image: "contract:prod"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: licmanager/charts/mail/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myrelease-mail
  labels:
    helm.sh/chart: mail-0.1.0
    app.kubernetes.io/name: mail
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mail
      app.kubernetes.io/instance: myrelease
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mail
        app.kubernetes.io/instance: myrelease
    spec:
      serviceAccountName: myrelease-mail
      securityContext:
        {}
      containers:
        - name: mail
          securityContext:
            {}
          image: "mail:prod"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: licmanager/charts/contract/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "myrelease-contract-test-connection"
  labels:
    helm.sh/chart: contract-0.1.0
    app.kubernetes.io/name: contract
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['myrelease-contract:80']
  restartPolicy: Never
---
# Source: licmanager/charts/core/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "myrelease-core-test-connection"
  labels:
    helm.sh/chart: core-0.1.0
    app.kubernetes.io/name: core
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['myrelease-core:80']
  restartPolicy: Never
---
# Source: licmanager/charts/mail/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "myrelease-mail-test-connection"
  labels:
    helm.sh/chart: mail-0.1.0
    app.kubernetes.io/name: mail
    app.kubernetes.io/instance: myrelease
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['myrelease-mail:80']
  restartPolicy: Never
